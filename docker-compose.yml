version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: adaptive-escrow-db
    environment:
      POSTGRES_DB: adaptive_escrow
      POSTGRES_USER: adaptive_escrow
      POSTGRES_PASSWORD: adaptive_escrow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - adaptive-escrow-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: adaptive-escrow-api
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://adaptive_escrow:adaptive_escrow_password@postgres:5432/adaptive_escrow
      - PORT=3001
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STELLAR_NETWORK=testnet
      - SOROBAN_RPC_URL=https://soroban-testnet.stellar.org
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - adaptive-escrow-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: adaptive-escrow-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
      - NEXT_PUBLIC_STELLAR_NETWORK=testnet
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - adaptive-escrow-network
    restart: unless-stopped

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: adaptive-escrow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - adaptive-escrow-network
    restart: unless-stopped

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: adaptive-escrow-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - adaptive-escrow-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  adaptive-escrow-network:
    driver: bridge
